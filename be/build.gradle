plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // MariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // H2 Database
    runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Query DSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring Security + OAuth 2.0
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // AWS S3, software.amazon.awssdk:bom -> AWS SDK의 의존성 버전 관리
    // https://central.sonatype.com/artifact/software.amazon.awssdk/bom/versions
    implementation platform('software.amazon.awssdk:bom:2.27.21')
    implementation 'software.amazon.awssdk:s3'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Model Mapper
    implementation 'org.modelmapper:modelmapper:3.2.2'

    // Test (JUnit5, Mock 포함)
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // Open API Docs, Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1'

}

test {
    useJUnitPlatform()
}

// Querydsl 설정부
// 내용 참고 : https://velog.io/@may_yun/1-QueryDSL-환경-설정
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}